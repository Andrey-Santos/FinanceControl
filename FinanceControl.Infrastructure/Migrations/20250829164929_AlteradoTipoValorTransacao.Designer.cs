// <auto-generated />
using System;
using FinanceControl.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceControl.Infrastructure.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20250829164929_AlteradoTipoValorTransacao")]
    partial class AlteradoTipoValorTransacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Banco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Cartao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BancoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContaBancariaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiaFechamento")
                        .HasColumnType("int");

                    b.Property<decimal>("Limite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("ContaBancariaId");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.CategoriaTransacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasTransacao");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.ContaBancaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BancoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContasBancarias");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.ContaPagarReceber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ContaBancariaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<long?>("TransacaoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("TransacaoId");

                    b.ToTable("ContaPagarReceber");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Fatura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("Ano")
                        .HasColumnType("smallint");

                    b.Property<long>("CartaoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<short>("Mes")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Transacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContaBancariaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEfetivacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaBancariaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Cartao", b =>
                {
                    b.HasOne("FinanceControl.Core.Domain.Entities.Banco", null)
                        .WithMany("Cartoes")
                        .HasForeignKey("BancoId");

                    b.HasOne("FinanceControl.Core.Domain.Entities.ContaBancaria", "ContaBancaria")
                        .WithMany("Cartoes")
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancaria");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.ContaBancaria", b =>
                {
                    b.HasOne("FinanceControl.Core.Domain.Entities.Banco", "Banco")
                        .WithMany("ContasBancarias")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceControl.Core.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ContasBancarias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.ContaPagarReceber", b =>
                {
                    b.HasOne("FinanceControl.Core.Domain.Entities.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceControl.Core.Domain.Entities.Transacao", "Transacao")
                        .WithMany()
                        .HasForeignKey("TransacaoId");

                    b.Navigation("ContaBancaria");

                    b.Navigation("Transacao");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Fatura", b =>
                {
                    b.HasOne("FinanceControl.Core.Domain.Entities.Cartao", "Cartao")
                        .WithMany("Faturas")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("FinanceControl.Core.Domain.Entities.CategoriaTransacao", "Categoria")
                        .WithMany("Transacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceControl.Core.Domain.Entities.ContaBancaria", "ContaBancaria")
                        .WithMany("Transacoes")
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("ContaBancaria");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Banco", b =>
                {
                    b.Navigation("Cartoes");

                    b.Navigation("ContasBancarias");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Cartao", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.CategoriaTransacao", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.ContaBancaria", b =>
                {
                    b.Navigation("Cartoes");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("FinanceControl.Core.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("ContasBancarias");
                });
#pragma warning restore 612, 618
        }
    }
}
