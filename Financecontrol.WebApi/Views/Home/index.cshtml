@model IEnumerable<FinanceControl.Core.Application.DTOs.Transacao.TransacaoResponseDto>

@{
    ViewData["Title"] = "Home";
}

<div class="mb-4">
    <div class="d-flex justify-content-center align-items-center gap-3">
        @{
            int mesAtual = ViewBag.MesAtual ?? DateTime.Now.Month;
            int anoAtual = ViewBag.AnoAtual ?? DateTime.Now.Year;
            int mesAnterior = mesAtual == 1 ? 12 : mesAtual - 1;
            int anoAnterior = mesAtual == 1 ? anoAtual - 1 : anoAtual;
            int mesProximo = mesAtual == 12 ? 1 : mesAtual + 1;
            int anoProximo = mesAtual == 12 ? anoAtual + 1 : anoAtual;
            string nomeMesAtual = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(mesAtual);
        }
        <a href="?mes=@mesAnterior&ano=@anoAnterior" class="btn btn-outline-secondary rounded-circle px-3 py-2" title="Mês anterior">
            <i class="bi bi-chevron-left"></i>
        </a>
        <span class="fs-4 fw-bold text-white">@nomeMesAtual @anoAtual</span>
        <a href="?mes=@mesProximo&ano=@anoProximo" class="btn btn-outline-secondary rounded-circle px-3 py-2" title="Próximo mês">
            <i class="bi bi-chevron-right"></i>
        </a>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card bg-primary text-white shadow">
            <div class="card-body">
                Saldo Mês Anterior
                <div class="h5 mb-0">@ViewBag.SaldoMesAnterior.ToString("C")</div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-success text-white shadow">
            <div class="card-body">
                Saldo Atual
                <div class="h5 mb-0">@ViewBag.SaldoAtual.ToString("C")</div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-warning text-dark shadow">
            <div class="card-body">
                Saldo Previsto Próximo Mês
                <div class="h5 mb-0">@ViewBag.SaldoPrevistoProximoMes.ToString("C")</div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Lista de transações -->
    <div class="col-md-6 mb-3">
        <div class="card bg-dark text-white h-100">
            <div class="card-body">
                <h5 class="card-title">Lista de Transações</h5>
                <div class="table-responsive" style="max-height: 350px; overflow-y: auto;">
                    <table class="table table-dark table-striped table-sm">
                        <thead>
                            <tr>
                                <th>Data</th>
                                <th>Descrição</th>
                                <th>Valor</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.DataEfetivacao.ToString("dd/MM/yyyy")</td>
                                    <td>@item.Descricao</td>
                                    <td class="@(item.Tipo == FinanceControl.Core.Domain.Enums.TipoTransacao.Receita ? "text-success" : "text-danger")">
                                        @item.Valor.ToString("C")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos -->
    <div class="col-md-6">
        <!-- Gráfico Geral -->
        <div class="card bg-dark text-white mb-3">
            <div class="card-body">
                <h5 class="card-title">Geral</h5>
                <canvas id="graficoGeral" height="50"></canvas>
            </div>
        </div>

        <!-- Receitas e Despesas -->
        <div class="row">
            <div class="col-md-6 mb-3">
                <div class="card bg-dark text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Despesas</h5>
                        <canvas id="graficoDespesas" height="180"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="card bg-dark text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Receitas</h5>
                        <canvas id="graficoReceitas" height="180"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const optionsPadrao = {
            plugins: {
                legend: {
                    labels: { color: 'white' }
                },
                tooltip: {
                    callbacks: {
                        label: function (context) {
                            let label = context.label || '';
                            let value = context.parsed;
                            let valorFormatado = value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
                            return label + ': ' + valorFormatado;
                        }
                    }
                }
            }
        };

        // Gráfico Geral
        new Chart(document.getElementById('graficoGeral'), {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasValores)),
                    backgroundColor: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasCores))
                }]
            },
            options: optionsPadrao
        });

        // Gráfico Despesas
        new Chart(document.getElementById('graficoDespesas'), {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.GraficoDespesasValores)),
                    backgroundColor: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasCores))
                }]
            },
            options: optionsPadrao
        });

        // Gráfico Receitas
        new Chart(document.getElementById('graficoReceitas'), {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.GraficoReceitasValores)),
                    backgroundColor: @Html.Raw(Json.Serialize(ViewBag.GraficoCategoriasCores))
                }]
            },
            options: optionsPadrao
        });
    </script>
}
