@model FinanceControl.Core.Application.DTOs.Transacao.TransacaoCreateDto

@{
    ViewData["Title"] = "Criar - Transação";
}

<div class="mt-5 row justify-content-center">
    <div class="card bg-dark text-white shadow col-md-6">
        <div class="card-body">
            <h4 class="card-title mb-4">Criar</h4>

            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label asp-for="Descricao" class="form-label">Descrição</label>
                    <input asp-for="Descricao" class="form-control" />
                    <span asp-validation-for="Descricao" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Valor" class="form-label"></label>
                    <input asp-for="Valor" type="number" step="0.01" class="form-control" />
                    <span asp-validation-for="Valor" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Tipo" class="form-label"></label>
                    <select asp-for="Tipo" class="form-select"
                        asp-items="Html.GetEnumSelectList<FinanceControl.Core.Domain.Enums.TipoTransacao>()"></select>
                    <span asp-validation-for="Tipo" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ContaBancariaId" class="form-label">Conta Bancária</label>
                    <select asp-for="ContaBancariaId" asp-items="ViewBag.Contas" class="form-select"></select>
                    <span asp-validation-for="ContaBancariaId" class="text-danger small"></span>
                </div>

                <div class="mb-3" id="tipooperacao-group">
                    <label asp-for="TipoOperacao" class="form-label"></label>
                    <select asp-for="TipoOperacao" class="form-select"
                        asp-items="Html.GetEnumSelectList<FinanceControl.Core.Domain.Enums.TipoOperacao>()"></select>
                    <span asp-validation-for="TipoOperacao" class="text-danger small"></span>
                </div>

                <div class="mb-3" id="cartao-group">
                    <label asp-for="CartaoId" class="form-label">Cartão</label>
                    <select asp-for="CartaoId" asp-items="ViewBag.Cartoes" class="form-select">
                        <option value="">Selecione...</option>
                    </select>
                    <span asp-validation-for="CartaoId" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="DataEfetivacao" class="form-label">Data de efetivação</label>
                    <input asp-for="DataEfetivacao" type="datetime-local" class="form-control"
                        asp-format="{0:yyyy-MM-ddTHH:mm}" />
                    <span asp-validation-for="DataEfetivacao" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="CategoriaId" class="form-label">Categoria de Transação</label>
                    <select asp-for="CategoriaId" asp-items="ViewBag.Categorias" class="form-select"></select>
                    <span asp-validation-for="CategoriaId" class="text-danger small"></span>
                </div>

                @if (TempData["Erro"] != null)
                {
                    <div class="alert alert-danger py-2 px-3 small">@TempData["Erro"]</div>
                }

                @if (TempData["MensagemSucesso"] != null)
                {
                    <div class="alert alert-success">@TempData["MensagemSucesso"]</div>
                }

                <div class="d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    <button type="submit" name="continuar" value="true" class="btn btn-secondary">
                        Salvar e Continuar
                    </button>
                </div>

            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        async function carregarCartoes(contaId) {
            var cartaoSelect = document.getElementById('CartaoId');
            if (!cartaoSelect) return;

            cartaoSelect.innerHTML = '';
            var optDefault = document.createElement('option');
            optDefault.value = '';
            optDefault.textContent = 'Selecione...';
            cartaoSelect.appendChild(optDefault);

            if (!contaId) {
                toggleCartao();
                return;
            }

            try {
                var url = '@Url.Action("CartoesPorConta", "Transacao")' + '?contaBancariaId=' + encodeURIComponent(contaId);
                var resp = await fetch(url, { headers: { 'Accept': 'application/json' } });
                if (!resp.ok) throw new Error('Falha ao carregar cartões');
                var itens = await resp.json();
                itens.forEach(function (c) {
                    var opt = document.createElement('option');
                    opt.value = c.id;
                    opt.textContent = c.nome;
                    cartaoSelect.appendChild(opt);
                });
            } catch (e) {
                console.error('Erro ao carregar cartões:', e);
            }

            toggleCartao();
        }

        function carregarDadosIniciais() {
            var contaSelect = document.getElementById('ContaBancariaId');
            if (contaSelect && contaSelect.value) {
                carregarCartoes(contaSelect.value);
            } else {
                toggleTransacao();
            }
        }

        function toggleTransacao() {
            var tipoTransacao = document.getElementById('Tipo');
            var tipoOperacao = document.getElementById('tipooperacao-group');

            tipoOperacao.style.display = tipoTransacao.value == @((int)FinanceControl.Core.Domain.Enums.TipoTransacao.Despesa) ? '' : 'none';

            toggleCartao();
        }

        function toggleCartao() {
            var tipoOperacao = document.getElementById('TipoOperacao');
            var tipoTransacao = document.getElementById('Tipo');
            var cartaoGroup = document.getElementById('cartao-group');
            var cartaoSelect = document.getElementById('CartaoId');
            if (!tipoOperacao || !cartaoGroup || !cartaoSelect) return;

            var isCredito = tipoOperacao.value == @((int)FinanceControl.Core.Domain.Enums.TipoOperacao.Credito) && tipoTransacao.value == @((int)FinanceControl.Core.Domain.Enums.TipoTransacao.Despesa);
            cartaoGroup.style.display = isCredito ? '' : 'none';
            cartaoSelect.disabled = !isCredito;
        }

        document.getElementById('TipoOperacao').addEventListener('change', toggleCartao);
        document.getElementById('Tipo').addEventListener('change', toggleTransacao);

        var contaSelect = document.getElementById('ContaBancariaId');
        if (contaSelect) {
            contaSelect.addEventListener('change', function () {
                carregarCartoes(this.value);
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            carregarDadosIniciais();
        });
    </script>
}